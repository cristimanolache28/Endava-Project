@Column(nullable = false) - is a part JPA specification. This annotation only add a not null constraint to the database coulmn, if
the Hibernate creates the database definitions.

@NotNull - is a part of the BeanValidation specification. It tells your Bean Validation implementation to check that the attribute is
not null. If the validation fails, Hibernate will not execute any SQL statment.

@ManyToOne if several entities can point to the the target entity
@OneToOne if only a single entity can point to the the target entity
@ManyToMany relationship occurs when multiple records in a table are associated with multiple records in another table. For example, a many-to-many relationship
exists between customers and products: customers can purchase various products, and products can be purchased by many customers.

documentation -> https://docs.jboss.org/hibernate/core/3.6/reference/en-US/html_single/

JPA (Java Persistence API)

The TestEntityManager provides helper methods to e.g. do a persist/flush/find operation (flush the in-memory persistence context and read the same entity from the database)
with a single-liner. The TestEntityManager is never mandatory.


@RestController annotation returns the json from the method not HTML or JSP. It is the combination of @Controller and @ResponseBody in one. The main
purpose of @RestController is to create RESTful web services. For returning html or jsp, simply annotated the controller class with @Controller.
When we use spring as SpringMVC - @Controller
When we use spring as SpringRESTfull Web Service - @RestController